{"version":3,"sources":["contexts/UserProvider.js","contexts/SocketProvider.js","contexts/ConversationsProvider.js","components/timer/index.js","components/message/index.js","components/chat/index.js","components/header/index.js","components/inputArea/index.js","components/dashboard/index.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","useUser","useContext","UserProvider","children","useState","uid","setUid","console","log","value","Provider","SocketContext","SocketProvider","socket","setSocket","useEffect","on","data","off","newSocket","io","close","Date","ConversationsContext","useConversations","ConversationsProvider","messages","setMessages","prev","sendMessage","text","emit","time","getTime","removeMessage","size","Timer","α","messageTime","setEnded","anima","setAnima","closeTheEnd","setCloseTheEnd","π","Math","PI","draw","r","x","sin","y","cos","mid","anim","setTimeout","className","style","width","height","viewBox","id","d","transform","Message","message","ended","Chat","map","Header","hash","setHash","loop","setLoop","setInterval","createHash","toString","clearInterval","s","split","reduce","a","b","charCodeAt","InputArea","setText","onSubmit","e","preventDefault","onChange","target","disabled","type","Dashboard","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.d7275c3b.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport function useUser() {\r\n  return useContext(UserContext);\r\n}\r\n\r\nexport function UserProvider({ children }) {\r\n  const [uid, setUid] = useState();\r\n  console.log(uid);\r\n  const value = {\r\n    uid,\r\n    setUid,\r\n  };\r\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { useUser } from \"./UserProvider\";\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport function useSocket() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\nexport function SocketProvider({ children }) {\r\n  const [socket, setSocket] = useState(null);\r\n  const { setUid } = useUser();\r\n  useEffect(() => {\r\n    if (socket === null) return;\r\n\r\n    socket.on(\"userId\", (data) => {\r\n      setUid(data);\r\n    });\r\n\r\n    return () => socket.off(\"userId\");\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    const newSocket = io(\"http://localhost:5000\");\r\n    console.log(newSocket);\r\n    setSocket(newSocket);\r\n\r\n    return () => newSocket.close(); //אם משהו קורה תסגור את הסוקט שלא יהיה סוקט מיותר\r\n  }, []);\r\n\r\n  return <SocketContext.Provider value={socket}>{children}</SocketContext.Provider>;\r\n}\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useSocket } from \"./SocketProvider\";\r\nimport { useUser } from \"./UserProvider\";\r\n\r\nconst mockMessages = [\r\n  {\r\n    text: \"שלום לכולם\",\r\n    uid: \"R48\",\r\n    time: new Date(),\r\n  },\r\n  {\r\n    text: \" מה זה הדבר הזה?\",\r\n    uid: \"A22\",\r\n    time: new Date(),\r\n  },\r\n];\r\n\r\nconst ConversationsContext = React.createContext();\r\n\r\nexport function useConversations() {\r\n  return useContext(ConversationsContext);\r\n}\r\n\r\nexport function ConversationsProvider({ children }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const socket = useSocket();\r\n  const { uid } = useUser();\r\n  console.log(messages);\r\n  useEffect(() => {\r\n    if (socket === null) return;\r\n\r\n    socket.on(\"receive-message\", (data) => {\r\n      console.log(data);\r\n      setMessages((prev) => [...prev, data]);\r\n    });\r\n    socket.on(\"old-messages\", (data) => {\r\n      setMessages(data);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"userId\");\r\n      socket.off(\"old-messages\");\r\n    };\r\n  }, [socket]);\r\n\r\n  function sendMessage(text) {\r\n    socket.emit(\"send-message\", { text, uid, time: new Date().getTime() });\r\n  }\r\n\r\n  function removeMessage() {\r\n    setMessages((prev) => {\r\n      let [needToRemove, ...rest] = prev;\r\n      return rest;\r\n    });\r\n  }\r\n  const value = {\r\n    messages,\r\n    setMessages,\r\n    sendMessage,\r\n    removeMessage,\r\n  };\r\n  return <ConversationsContext.Provider value={value}>{children}</ConversationsContext.Provider>;\r\n}\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst size = 20;\r\nexport default function Timer({ messageTime, setEnded }) {\r\n  const [anima, setAnima] = useState();\r\n  const [closeTheEnd, setCloseTheEnd] = useState(false);\r\n  let α,\r\n    π = Math.PI,\r\n    t = 180;\r\n\r\n  useEffect(() => {\r\n    α = (new Date().getTime() - messageTime) / 166;\r\n    draw();\r\n  }, []);\r\n\r\n  function draw() {\r\n    α++;\r\n    α %= 360;\r\n    let r = (α * π) / 180,\r\n      x = Math.sin(r) * (size / 2),\r\n      y = Math.cos(r) * -(size / 2),\r\n      mid = α > 180 ? 1 : 0,\r\n      anim = `M 0 0 v -${size / 2} A ${size / 2} ${size / 2} 1 ${mid} 1 ${x} ${y} z`;\r\n    setAnima(anim);\r\n    setTimeout(draw, t);\r\n    if (α > 358) {\r\n      setEnded(true);\r\n    }\r\n    if (α > 270) {\r\n      setCloseTheEnd(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={closeTheEnd ? \"timer flashing-timer\" : \"timer\"}>\r\n      <div className=\"circle-background\" style={{ width: size, height: size }}>\r\n        <svg width={size} height={size} viewBox={`0 0 ${size} ${size}`}>\r\n          <path id=\"border\" d={anima} transform={`translate(${size / 2},${size / 2})`} />\r\n          <path id=\"loader\" d={anima} transform={`translate(${size / 2},${size / 2}) scale(.84)`} />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useConversations } from \"../../contexts/ConversationsProvider\";\r\nimport Timer from \"../timer\";\r\nimport \"./style.css\";\r\nexport default function Message({ message, uid, time }) {\r\n  const [ended, setEnded] = useState(false);\r\n  const { removeMessage } = useConversations();\r\n  useEffect(() => {\r\n    if (ended) {\r\n      setTimeout(() => {\r\n        removeMessage();\r\n      }, 500);\r\n    }\r\n  }, [ended]);\r\n  return (\r\n    <div className={ended ? \"message-container message-ended\" : \"message-container\"}>\r\n      <div className=\"message-name\">{uid}</div>\r\n      <Timer messageTime={time} setEnded={setEnded} />\r\n      <div className=\"message-context\">{message}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useConversations } from \"../../contexts/ConversationsProvider\";\r\nimport Message from \"../message\";\r\nimport \"./style.css\";\r\n\r\nexport default function Chat() {\r\n  const { messages } = useConversations();\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      {messages.map((message) => (\r\n        <Message message={message.text} uid={message.uid} time={message.time} key={message.time} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst roomName = \"xpttg\";\r\nconst users = \"R48, B13 ,C55\";\r\n\r\nexport default function Header() {\r\n  const [hash, setHash] = useState();\r\n  const [loop, setLoop] = useState();\r\n\r\n  useEffect(() => {\r\n    setLoop(\r\n      setInterval(() => {\r\n        setHash(createHash(new Date().getTime().toString()));\r\n      }, 5000)\r\n    );\r\n    return () => {\r\n      clearInterval(loop);\r\n    };\r\n  }, []);\r\n\r\n  const createHash = (s) =>\r\n    s.split(\"\").reduce((a, b) => {\r\n      a = (a << 5) - a + b.charCodeAt(0);\r\n      return a & a;\r\n    }, 0);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <section className=\"header-top\">\r\n        <div className=\"circle-progress\"></div>\r\n        <div className=\"title\">black space</div>\r\n      </section>\r\n      <div className=\"progress\">\r\n        <div className=\"indeterminate\"></div>\r\n      </div>\r\n      <section className=\"information\">\r\n        <div className=\"square\"></div>\r\n        <div className=\"hash\">{hash}</div>\r\n        <div className=\"users\">{users}</div>\r\n        <div className=\"room\">{roomName}</div>\r\n      </section>\r\n    </header>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useConversations } from \"../../contexts/ConversationsProvider\";\r\nimport \"./style.css\";\r\nexport default function InputArea() {\r\n  const [text, setText] = useState(\"\");\r\n  const { sendMessage } = useConversations();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    sendMessage(text);\r\n    setText(\"\");\r\n  }\r\n  return (\r\n    <footer className=\"input-area\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input value={text} onChange={(e) => setText(e.target.value)}></input>\r\n        <button disabled={text === \"\"} type=\"submit\">\r\n          send\r\n        </button>\r\n      </form>\r\n    </footer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Chat from \"../chat\";\r\nimport Header from \"../header\";\r\nimport InputArea from \"../inputArea\";\r\nimport Code from \"../code\";\r\nimport \"./style.css\";\r\nexport default function Dashboard() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Chat />\r\n      <InputArea />\r\n      {/* <div className=\"code\">\r\n        <Code />\r\n      </div> */}\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Dashboard from \"./components/dashboard\";\n\nimport { ConversationsProvider } from \"./contexts/ConversationsProvider\";\nimport { SocketProvider } from \"./contexts/SocketProvider\";\nimport { UserProvider } from \"./contexts/UserProvider\";\n\nfunction App() {\n  return (\n    <>\n      <UserProvider>\n        <SocketProvider>\n          <ConversationsProvider>\n            <Dashboard />\n          </ConversationsProvider>\n        </SocketProvider>\n      </UserProvider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}